name: Test Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout mix repo
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - run: flutter pub get

      - uses: invertase/github-action-dart-analyzer@v1
        with:
          fatal-infos: false

      - name: Install DCM
        uses: CQLabs/setup-dcm@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run DCM
        uses: CQLabs/dcm-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ci_key: oss
          email: oss
          folders: .
          fatal_style: true
          fatal_performance: true
          fatal_warnings: true
        
      - run: flutter test

  test_min_sdk:
    needs: test
    runs-on: ubuntu-latest
    name: Test Min SDK
    steps:
      - name: Checkout mix repo
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.3"

      - run: flutter pub get

      - uses: invertase/github-action-dart-analyzer@v1
        with:
          fatal-infos: false

      - run: flutter test

  analyze_changes:
      runs-on: ubuntu-latest
      name: Analyze Changes
      needs: test
      steps:
        - name: Checkout mix repo
          uses: actions/checkout@v2
          with:
            path: main

        - name: Checkout remix_ui repo
          uses: actions/checkout@v2
          with:
            repository: conceptadev/remix_ui
            path: remix

        - name: Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            channel: "stable"

        - name: Add most recent mix version to remix_ui
          run: |
            cd remix
            dart pub remove mix
            dart pub add 'mix:{"git":{"url":"https://github.com/conceptadev/mix","ref": ${{ github.head_ref }}}}'
        
        - name: Verify if there are any undefined symbols
          if: ${{ github.event_name != 'pull_request_target' || !contains(github.event.pull_request.labels.*.name, 'Behavior Change') }}
          run: |
            cd remix
            if flutter analyze lib | grep -q 'undefined'; then
              echo "A file contains undefined symbols. Please add a deprecated annotation before you remove it."
              exit 1
            fi
          id: undefined_symbols

        - name: Run flutter tests for behavior changes
          if: ${{ github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'New Deprecation') }}
          run: cd remix && flutter test
          id: remix_test

        - name: Add Label to Issue and Comment for Breaking Changes
          if: ${{ failure() && steps.undefined_symbols.outcome == 'failure' }}
          uses: actions/github-script@v7
          with:
            script: |
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['New Deprecation']
              })
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Hello ðŸ˜Š, we have noticed a breaking change in our API. Please add the deprecated annotation before you remove it.'
              })

        - name: Add Label to Issue and Comment for Behavior Changes
          if: ${{ failure() && steps.remix_test.outcome == 'failure' }}
          uses: actions/github-script@v7
          with:
            script: |
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['Behavior Change']
              })
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "We have noticed a change in Mix's behavior. Are you sure about this?"
              })